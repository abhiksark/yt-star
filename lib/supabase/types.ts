import { z } from 'zod';

// Validation schemas for otherData substructures
export const VideoSchema = z.object({
  _id: z.string(),
  title: z.string()
});

export const PlaylistSchema = z.object({
  playlistId: z.string(),
  title: z.string(),
  thumbnailUrl: z.string().url()
});

export const OtherDataSchema = z.object({
  videoList: z.array(VideoSchema),
  playList: z.array(PlaylistSchema),
  logoUrl: z.string().url()
});

// Database profile schema
export const ProfileSchema = z.object({
  id: z.number().optional(), // Auto-generated by Supabase
  name: z.string().min(1, "Name is required"),
  category: z.array(z.string()).min(1, "At least one category is required"),
  otherData: OtherDataSchema,
  country: z.string().length(3, "Country code must be exactly 3 characters"),
  language: z.string().length(3, "Language code must be exactly 3 characters"),
  views: z.string().optional(),
  videoCount: z.string().optional(),
  subscriberCount: z.string().optional(),
  complexity: z.number().min(1).max(5).default(1),
  description: z.string().optional(),
  slug: z.string()
});

export type Profile = z.infer<typeof ProfileSchema>;
export type OtherData = z.infer<typeof OtherDataSchema>;
export type Video = z.infer<typeof VideoSchema>;
export type Playlist = z.infer<typeof PlaylistSchema>;